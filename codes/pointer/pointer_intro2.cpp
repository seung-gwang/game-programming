#include <iostream>
using namespace std;

//포인터

int main()
{
	//number라는 이름의 4바이트 정수 타입의 바구니 만든다
	//number라는 변수는 스택 메모리에 할당
	// number = 1은 number라는 바구니에 1이라는 숫자를 넣으라는 의미
	//따라서 스택 메모리에 있는 특정 주소 number 바구니에 우리가 원하는 값을 넣는 것.
	// number는 메모리에 이름을 붙인 것
	//이따금, "원본수정"이 필요한 경우가 있음. ==> 포인터를 사용해야 한다.
	int number = 1;

	//포인터 사용법  :  TYPE* 변수이름;
	/*
	- TYPE
	- *
	*/

	int* ptr;
	//바구니는 바구니인데 "주소를 저장하는 바구니" 이다.
	
	ptr = &number; //[number의 주소]를 ptr에 넣는다.
	//포인터는 4byte(32bit) 또는 8byte(64bit) 고정 크기

	//주소를 갖고 어쩌라는거지?
	//해당 주소에 접근해서 내용물을 가지고 이것저것 해야함
	//"주소를 저장하는 바구니"가 가리키는 주소로 가서 무엇인가를 하기
	//*변수이름 = 값;
	//*이 여러번 쓰이지만 사용 시점에 따라 구분할 줄 알아야 함.


	int value1 = *ptr; //ptr이라는 주소를 저장하는 바구니가 가리키는 주소로 가서 값을 꺼낸다.
	*ptr = 2; //ptr은 주소가 담겨있다. 담겨있는 그 주소로 가서 값을 2로 변경하여라.

	//TYPE을 붙여주는 이유?
	//포인터에 대한 추가 정보를 표현해준다. 
	//주소에 가면 뭐가 있는가?-를 알려준다
	//타입이 불일치하면?
	__int64* ptr2 = (__int64*)&number;//강제 casting
	*ptr2 = 0xAABBCCDDEEFF; //값이 밀려서 다음 주소까지 침범
	//만약 그 주소에 중요한 값이 있었다면 대참사 가능...
	return 0;
}